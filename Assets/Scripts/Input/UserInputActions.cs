//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/UserInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UserInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UserInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UserInputActions"",
    ""maps"": [
        {
            ""name"": ""Train"",
            ""id"": ""c3401460-d25e-4945-9b25-c5ab1063a864"",
            ""actions"": [
                {
                    ""name"": ""Pressure Absolute"",
                    ""type"": ""Value"",
                    ""id"": ""f1e35f4c-0ce3-4673-ad80-9c1ed6bffac4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""AxisDeadzone(min=1.401298E-45,max=0.975)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pressure Modifier"",
                    ""type"": ""Value"",
                    ""id"": ""9f92cb2a-f4f3-486b-a49c-e5ed4ac0e959"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""ScaleVector2,StickDeadzone(min=0.125,max=0.925),AxisDeadzone(min=0.1,max=0.95)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Acceleration Absolute"",
                    ""type"": ""Value"",
                    ""id"": ""5b6dbf3d-5ad8-42f0-a77d-20dc2a868eff"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""AxisDeadzone(min=1.401298E-45,max=0.975)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Acceleration Modifier"",
                    ""type"": ""Value"",
                    ""id"": ""cec50a4c-5b71-4f18-83b3-fe85f5c301b8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""ScaleVector2,StickDeadzone(min=0.125,max=0.925),AxisDeadzone(min=0.1,max=0.95)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Focus Panel"",
                    ""type"": ""Button"",
                    ""id"": ""ff850ff0-fb46-475a-b4f7-05dae7499649"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit Train"",
                    ""type"": ""Button"",
                    ""id"": ""bb043533-c691-4005-bfae-1d0f691651fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""3b7642e0-3a19-47f3-94f7-97038a278c88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Change Perspective"",
                    ""type"": ""Button"",
                    ""id"": ""737fe307-3981-4f6a-a1b6-ff1aeccae8be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5d536afa-47e0-45ce-baf1-399873dc435b"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0,y=0),StickDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Acceleration Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89b4835a-9b22-4895-8889-82a330183a43"",
                    ""path"": ""<DualShockGamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0,y=0),StickDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Acceleration Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""3c71413e-9a4c-4104-b646-524cde5637e2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.5)"",
                    ""groups"": """",
                    ""action"": ""Acceleration Modifier"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7495b12a-8cfe-41f9-a7ca-36c269d2353c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Acceleration Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9c342a09-ee82-402f-932b-5c0024be05fb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""39497b13-f942-410f-b46b-3a614be55f63"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Focus Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50a661b9-8ce0-4461-aff0-568ba5422c7d"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Focus Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc1d5b3c-0bb3-4a89-a8f8-8efc811eeed2"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Pressure Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1656b6f-d5cc-4233-9812-8fdf92a08a92"",
                    ""path"": ""<DualShockGamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Pressure Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c2c5c978-aa7d-4bd8-842f-ebe657d17151"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=0.5)"",
                    ""groups"": """",
                    ""action"": ""Pressure Modifier"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""920a1a07-a841-4f88-8b64-76c960c86066"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Pressure Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0b6e660d-6fda-4749-bcf0-5642ed960ad8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone(min=0.125,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Pressure Modifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""668afab4-2866-484d-96e8-cadf4de41b19"",
                    ""path"": ""<HID::Mega World USB Game Controllers>/rz"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration Absolute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45c1ce24-6715-418c-87b3-0e3c29a42350"",
                    ""path"": ""<HID::Mega World USB Game Controllers>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pressure Absolute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dbb4dfd-9754-4d61-8224-b427c8dd293e"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit Train"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82e4c611-185a-4c48-926b-7424c461cec6"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit Train"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08657547-aebf-486f-ad51-0a123db2858a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95bfcc0e-5a7c-4d0e-9d91-81b2696813cb"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ccb1dcb-bb34-4f86-a2cd-edd4fd96d8ca"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Perspective"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06374f26-61a0-449f-8082-1d221b1c0649"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Perspective"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""a9e6506c-c1bf-4d85-8a8f-22ba5905ce03"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""eb44c0d4-c50b-4b43-9905-c73d6ebd4b65"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""3aaa53cd-9b20-4b81-bc04-100b49279eeb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Enter Train"",
                    ""type"": ""Button"",
                    ""id"": ""50f8ca63-336a-419d-9494-85c9aa2d1c67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu"",
                    ""type"": ""Button"",
                    ""id"": ""d57fdddf-45df-4af9-9109-be8cca64b5ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1485c671-220e-4490-85dd-03612a1bc036"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d8a84d37-1e87-43af-bdb1-069d7ab98728"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b339b2ad-30d5-42be-ae9b-cc6254fe9058"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""966420cf-5e3e-4b92-b5d0-626a9f0dc314"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""47e55e95-244b-4c3c-ab48-a2fc55b08b85"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""df56d66d-1bab-4750-8787-5b6fef8bec45"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""32f2d0a3-5a25-40a9-875d-c345ee781100"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""988ad5bf-2aa8-449e-a133-b98f02ec57b2"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd1f2cc6-203d-412a-a1cd-5ae1412d3e8c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter Train"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a9b8bea-5df7-4559-99fd-753e9ce35c53"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter Train"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c8c9a4a-2338-44fc-af47-f10bff84811a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa982b6c-c86f-4b02-858b-7366358e7336"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Train
        m_Train = asset.FindActionMap("Train", throwIfNotFound: true);
        m_Train_PressureAbsolute = m_Train.FindAction("Pressure Absolute", throwIfNotFound: true);
        m_Train_PressureModifier = m_Train.FindAction("Pressure Modifier", throwIfNotFound: true);
        m_Train_AccelerationAbsolute = m_Train.FindAction("Acceleration Absolute", throwIfNotFound: true);
        m_Train_AccelerationModifier = m_Train.FindAction("Acceleration Modifier", throwIfNotFound: true);
        m_Train_FocusPanel = m_Train.FindAction("Focus Panel", throwIfNotFound: true);
        m_Train_ExitTrain = m_Train.FindAction("Exit Train", throwIfNotFound: true);
        m_Train_Menu = m_Train.FindAction("Menu", throwIfNotFound: true);
        m_Train_ChangePerspective = m_Train.FindAction("Change Perspective", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Camera = m_Player.FindAction("Camera", throwIfNotFound: true);
        m_Player_EnterTrain = m_Player.FindAction("Enter Train", throwIfNotFound: true);
        m_Player_Menu = m_Player.FindAction("Menu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Train
    private readonly InputActionMap m_Train;
    private ITrainActions m_TrainActionsCallbackInterface;
    private readonly InputAction m_Train_PressureAbsolute;
    private readonly InputAction m_Train_PressureModifier;
    private readonly InputAction m_Train_AccelerationAbsolute;
    private readonly InputAction m_Train_AccelerationModifier;
    private readonly InputAction m_Train_FocusPanel;
    private readonly InputAction m_Train_ExitTrain;
    private readonly InputAction m_Train_Menu;
    private readonly InputAction m_Train_ChangePerspective;
    public struct TrainActions
    {
        private @UserInputActions m_Wrapper;
        public TrainActions(@UserInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PressureAbsolute => m_Wrapper.m_Train_PressureAbsolute;
        public InputAction @PressureModifier => m_Wrapper.m_Train_PressureModifier;
        public InputAction @AccelerationAbsolute => m_Wrapper.m_Train_AccelerationAbsolute;
        public InputAction @AccelerationModifier => m_Wrapper.m_Train_AccelerationModifier;
        public InputAction @FocusPanel => m_Wrapper.m_Train_FocusPanel;
        public InputAction @ExitTrain => m_Wrapper.m_Train_ExitTrain;
        public InputAction @Menu => m_Wrapper.m_Train_Menu;
        public InputAction @ChangePerspective => m_Wrapper.m_Train_ChangePerspective;
        public InputActionMap Get() { return m_Wrapper.m_Train; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TrainActions set) { return set.Get(); }
        public void SetCallbacks(ITrainActions instance)
        {
            if (m_Wrapper.m_TrainActionsCallbackInterface != null)
            {
                @PressureAbsolute.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnPressureAbsolute;
                @PressureAbsolute.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnPressureAbsolute;
                @PressureAbsolute.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnPressureAbsolute;
                @PressureModifier.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnPressureModifier;
                @PressureModifier.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnPressureModifier;
                @PressureModifier.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnPressureModifier;
                @AccelerationAbsolute.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnAccelerationAbsolute;
                @AccelerationAbsolute.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnAccelerationAbsolute;
                @AccelerationAbsolute.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnAccelerationAbsolute;
                @AccelerationModifier.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnAccelerationModifier;
                @AccelerationModifier.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnAccelerationModifier;
                @AccelerationModifier.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnAccelerationModifier;
                @FocusPanel.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnFocusPanel;
                @FocusPanel.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnFocusPanel;
                @FocusPanel.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnFocusPanel;
                @ExitTrain.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnExitTrain;
                @ExitTrain.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnExitTrain;
                @ExitTrain.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnExitTrain;
                @Menu.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnMenu;
                @ChangePerspective.started -= m_Wrapper.m_TrainActionsCallbackInterface.OnChangePerspective;
                @ChangePerspective.performed -= m_Wrapper.m_TrainActionsCallbackInterface.OnChangePerspective;
                @ChangePerspective.canceled -= m_Wrapper.m_TrainActionsCallbackInterface.OnChangePerspective;
            }
            m_Wrapper.m_TrainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PressureAbsolute.started += instance.OnPressureAbsolute;
                @PressureAbsolute.performed += instance.OnPressureAbsolute;
                @PressureAbsolute.canceled += instance.OnPressureAbsolute;
                @PressureModifier.started += instance.OnPressureModifier;
                @PressureModifier.performed += instance.OnPressureModifier;
                @PressureModifier.canceled += instance.OnPressureModifier;
                @AccelerationAbsolute.started += instance.OnAccelerationAbsolute;
                @AccelerationAbsolute.performed += instance.OnAccelerationAbsolute;
                @AccelerationAbsolute.canceled += instance.OnAccelerationAbsolute;
                @AccelerationModifier.started += instance.OnAccelerationModifier;
                @AccelerationModifier.performed += instance.OnAccelerationModifier;
                @AccelerationModifier.canceled += instance.OnAccelerationModifier;
                @FocusPanel.started += instance.OnFocusPanel;
                @FocusPanel.performed += instance.OnFocusPanel;
                @FocusPanel.canceled += instance.OnFocusPanel;
                @ExitTrain.started += instance.OnExitTrain;
                @ExitTrain.performed += instance.OnExitTrain;
                @ExitTrain.canceled += instance.OnExitTrain;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
                @ChangePerspective.started += instance.OnChangePerspective;
                @ChangePerspective.performed += instance.OnChangePerspective;
                @ChangePerspective.canceled += instance.OnChangePerspective;
            }
        }
    }
    public TrainActions @Train => new TrainActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Camera;
    private readonly InputAction m_Player_EnterTrain;
    private readonly InputAction m_Player_Menu;
    public struct PlayerActions
    {
        private @UserInputActions m_Wrapper;
        public PlayerActions(@UserInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Camera => m_Wrapper.m_Player_Camera;
        public InputAction @EnterTrain => m_Wrapper.m_Player_EnterTrain;
        public InputAction @Menu => m_Wrapper.m_Player_Menu;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Camera.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera;
                @EnterTrain.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnterTrain;
                @EnterTrain.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnterTrain;
                @EnterTrain.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnterTrain;
                @Menu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMenu;
                @Menu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMenu;
                @Menu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMenu;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @EnterTrain.started += instance.OnEnterTrain;
                @EnterTrain.performed += instance.OnEnterTrain;
                @EnterTrain.canceled += instance.OnEnterTrain;
                @Menu.started += instance.OnMenu;
                @Menu.performed += instance.OnMenu;
                @Menu.canceled += instance.OnMenu;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface ITrainActions
    {
        void OnPressureAbsolute(InputAction.CallbackContext context);
        void OnPressureModifier(InputAction.CallbackContext context);
        void OnAccelerationAbsolute(InputAction.CallbackContext context);
        void OnAccelerationModifier(InputAction.CallbackContext context);
        void OnFocusPanel(InputAction.CallbackContext context);
        void OnExitTrain(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
        void OnChangePerspective(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnEnterTrain(InputAction.CallbackContext context);
        void OnMenu(InputAction.CallbackContext context);
    }
}
